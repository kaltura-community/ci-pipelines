name: Build & Push Docker Image
on:
    workflow_call:
      inputs:
        registry:
            description: 'Registry to push the image to'
            type: string
            default: 'ghcr.io'
        image_name:
            description: 'Name of the image to build'
            type: string
            default: ${{ github.repository }}
      outputs:
        imageid:
          description: 'The image ID of the built image'
          value: ${{ jobs.build.outputs.imageid }}
        digest:
          description: 'The digest of the built image'
          value: ${{ jobs.build.outputs.digest }}
        metadata:
          description: 'The metadata of the built image'
          value: ${{ jobs.build.outputs.metadata }}

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      imageid: ${{ steps.build-and-push.outputs.imageid }}
      digest: ${{ steps.build-and-push.outputs.digest }}
      metadata: ${{ steps.build-and-push.outputs.metadata }}
    steps:
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3.4.0
      with:
        cosign-release: 'v2.2.2'
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.2.0

    - name: Log into registry ${{ github.event.inputs.registry }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ github.event.inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ github.event.inputs.registry }}/${{ github.event.inputs.image_name }}
  
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        TAGS: ${{ steps.meta.outputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
